{"version":3,"sources":["scripts/dynamicAdapt.js"],"names":["useDynamicAdapt","type","result","isMin","className","attrName","dNodes","document","querySelectorAll","forEach","element","attr","value","getAttribute","split","map","val","trim","toSelector","breakpoint","order","to","querySelector","push","parent","parentElement","undefined","isNaN","Number","index","sort","a","b","getDMediaQueries","items","uniqItems","Set","item","query","dMediaQuery","matchMedia","window","mediaHandler","getMediaHandler","matches","moveTo","dNode","getIndexInParent","children","indexOf","classList","add","length","append","prepend","before","reverse","moveBack","contains","remove","filter","addEventListener"],"mappings":"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","file":"dynamicAdapt.059e8bd8.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable max-len */\n// was taken from the open-source on Github\n'use strict';\n\n/**\n * @typedef {Object} dNode\n * @property {HTMLElement} parent\n * @property {HTMLElement} element\n * @property {HTMLElement} to\n * @property {string} breakpoint\n * @property {string} order\n * @property {number} index\n */\n\n/**\n * @typedef {Object} dMediaQuery\n * @property {string} query\n * @property {number} breakpoint\n */\n\n/**\n * @param {'min' | 'max'} type\n */\nfunction useDynamicAdapt(type = 'max') {\n  const className = '_dynamic_adapt_';\n  const attrName = 'data-da';\n\n  /** @type {dNode[]} */\n  const dNodes = getDNodes();\n\n  /** @type {dMediaQuery[]} */\n  const dMediaQueries = getDMediaQueries(dNodes);\n\n  dMediaQueries.forEach((dMediaQuery) => {\n    const matchMedia = window.matchMedia(dMediaQuery.query);\n    // массив объектов с подходящим брейкпоинтом\n    const filteredDNodes = dNodes.filter(({ breakpoint }) => breakpoint === dMediaQuery.breakpoint);\n    const mediaHandler = getMediaHandler(matchMedia, filteredDNodes);\n\n    matchMedia.addEventListener('change', mediaHandler);\n\n    mediaHandler();\n  });\n\n  function getDNodes() {\n    const result = [];\n    const elements = [...document.querySelectorAll(`[${attrName}]`)];\n\n    elements.forEach((element) => {\n      const attr = element.getAttribute(attrName);\n      const [toSelector, breakpoint, order] = attr.split(',').map((val) => val.trim());\n\n      const to = document.querySelector(toSelector);\n\n      if (to) {\n        result.push({\n          parent: element.parentElement,\n          element,\n          to,\n          breakpoint: breakpoint !== undefined ? breakpoint : '767',\n          order: order !== undefined ? (isNumber(order) ? Number(order) : order) : 'last',\n          index: -1,\n        });\n      }\n    });\n\n    return sortDNodes(result);\n  }\n\n  /**\n   * @param {dNode} items\n   * @returns {dMediaQuery[]}\n   */\n  function getDMediaQueries(items) {\n    const uniqItems = [...new Set(items.map(({ breakpoint }) => `(${type}-width: ${breakpoint}px),${breakpoint}`))];\n\n    return uniqItems.map((item) => {\n      const [query, breakpoint] = item.split(',');\n\n      return {\n        query, breakpoint,\n      };\n    });\n  }\n\n  /**\n   * @param {MediaQueryList} matchMedia\n   * @param {dNodes} items\n   */\n  function getMediaHandler(matchMedia, items) {\n    return function mediaHandler() {\n      if (matchMedia.matches) {\n        items.forEach((item) => {\n          moveTo(item);\n        });\n\n        items.reverse();\n      } else {\n        items.forEach((item) => {\n          if (item.element.classList.contains(className)) {\n            moveBack(item);\n          }\n        });\n\n        items.reverse();\n      }\n    };\n  }\n\n  /**\n   * @param {dNode} dNode\n   */\n  function moveTo(dNode) {\n    const { to, element, order } = dNode;\n\n    dNode.index = getIndexInParent(dNode.element, dNode.element.parentElement);\n    element.classList.add(className);\n\n    if (order === 'last' || order >= to.children.length) {\n      to.append(element);\n\n      return;\n    }\n\n    if (order === 'first') {\n      to.prepend(element);\n\n      return;\n    }\n\n    to.children[order].before(element);\n  }\n\n  /**\n   * @param {dNode} dNode\n   */\n  function moveBack(dNode) {\n    const { parent, element, index } = dNode;\n\n    element.classList.remove(className);\n\n    if (index >= 0 && parent.children[index]) {\n      parent.children[index].before(element);\n    } else {\n      parent.append(element);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {HTMLElement} parent\n   */\n  function getIndexInParent(element, parent) {\n    return [...parent.children].indexOf(element);\n  }\n\n  /**\n   * Функция сортировки массива по breakpoint и order\n   * по возрастанию для type = min\n   * по убыванию для type = max\n   *\n   * @param {dNode[]} items\n   */\n  function sortDNodes(items) {\n    const isMin = type === 'min' ? 1 : 0;\n\n    return [...items].sort((a, b) => {\n      if (a.breakpoint === b.breakpoint) {\n        if (a.order === b.order) {\n          return 0;\n        }\n\n        if (a.order === 'first' || b.order === 'last') {\n          return -1 * isMin;\n        }\n\n        if (a.order === 'last' || b.order === 'first') {\n          return 1 * isMin;\n        }\n\n        return 0;\n      }\n\n      return (a.breakpoint - b.breakpoint) * isMin;\n    });\n  }\n\n  function isNumber(value) {\n    return !isNaN(value);\n  }\n}\n\nuseDynamicAdapt('min');\n"]}